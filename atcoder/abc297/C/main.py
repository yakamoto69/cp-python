#!/usr/bin/env python3
import sys


def solve(H: int, W: int, S: "List[List[str]]"):
    for h in range(H):
        for w in range(W - 1):
            if S[h][w] == S[h][w + 1] == "T":
                S[h][w] = "P"
                S[h][w + 1] = "C1"

    for h in range(H):
        print("".join(S[h]))
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    S = [list(next(tokens)) for _ in range(H)]  # type: "List[str]"
    solve(H, W, S)

if __name__ == '__main__':
    main()
