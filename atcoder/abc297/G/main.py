#!/usr/bin/env python3
import sys


def solve(N: int, L: int, R: int, A: "List[int]"):
    # X = R - L
    # B1 = [A[i] ^ X for i in range(N)]
    # print(B1, file=sys.stderr)
    B = [(A[i] // R, A[i] // L) for i in range(N)]
    cnt = 0
    X = 0
    for i in range(N):
        l, r = B[i]
        cnt += l - 1
        X ^= r - l + 1
    b1 = cnt % 2
    b2 = 0 if X == 0 else 1
    if b1 ^ b2 == 0:
        print("Second")
    else:
        print("First")
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    L = int(next(tokens))  # type: int
    R = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, L, R, A)

if __name__ == '__main__':
    main()
