#!/usr/bin/env python3
import sys

MOD = 998244353  # type: int


def solve(N: int, M: int, K: int, P: "List[int]", S: "List[int]", T: "List[int]"):
    return


# Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    P = [int(next(tokens)) for _ in range(N - 1)]  # type: "List[int]"
    S = [int()] * (M)  # type: "List[int]"
    T = [int()] * (M)  # type: "List[int]"
    for i in range(M):
        S[i] = int(next(tokens))
        T[i] = int(next(tokens))
    solve(N, M, K, P, S, T)

if __name__ == '__main__':
    main()
