#!/usr/bin/env python3
import sys
from typing import List


def solve(N: int, S: str, X: str):
    dp = [[False]*7 for _ in range(N + 1)]
    dp[N][0] = True
    ten = 1
    for i in range(N - 1, -1, -1):
        num = (ord(S[i])-ord('0')) * ten % 7
        for j in range(7):
            nj = (j + num) % 7
            if X[i] == 'T':
                dp[i][j] = dp[i + 1][j] or dp[i + 1][nj]
            else:
                dp[i][j] = dp[i + 1][j] and dp[i + 1][nj]
        ten = ten * 10 % 7

    winT = dp[0][0]
    # print(dp, file=sys.stderr)
    print("Takahashi" if winT else "Aoki")


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    X = next(tokens)  # type: str
    solve(N, S, X)

if __name__ == '__main__':
    main()
