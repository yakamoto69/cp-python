#!/usr/bin/env python3
import sys
from atcoder.modint import Modint, ModContext

MOD = 998244353  # type: int


def solve(N: int, S: str):
    A = [int(d) for d in S]
    for i in range(N - 1):
        if A[i] != 1 and A[i + 1] != 1:
            print(-1)
            return

    with ModContext(MOD):
        turn = Modint(0)  # iから右の数字が全部消えるまでのターン
        for i in range(N - 1, 0, -1):  # i=0は無視する
            # print(f'{turn.val()}', file=sys.stderr)
            if A[i] == 1:
                turn += 1
            else:
                turn = Modint(A[i]) * (turn + 1)


        # i=0だけ残ってる状態になってる
        print(turn.val())

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)
    solve(N, S)

if __name__ == '__main__':
    main()
